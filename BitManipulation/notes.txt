
---------------------------
BIT MANIPULATION TECHNIQUES
---------------------------

# XOR operator (^) --> When two bits are opposite then output is 1 unless output is 0.

# Tilt Operator (~) --> It inverses all the bits. Or in other words it actually gives the compliment of a number's binary.

# Right Shift Operator (>>) --> 
    For example : 12 >> 2 
    binary of 12 is : 1100
    12 >> 2 = 0011

# Left shift Operator (<<) -->
    For example : 12 << 2
    binary of 12 is : 1100
    12 << 2 = 110000

# Right Shifting Divides the number by 2
    Example : 12 >> 1 = 6

# Left Shifting Multiplies the number by 2
    Example : 12 << 1 = 24
    
# No of bits in a binary number n is ==> (log(2base)n) + 1  ****

# n & ( n - 1 )  ==> This unsets the least significant bit:
        for example: if we do the n&(n-1) repeatedly until the number becomes 0 
            1011001 -> 1011000 -> 1010000 -> 1000000 -> 0000000

# n ^ n = 0 ;;;;;  0 ^ n = n;